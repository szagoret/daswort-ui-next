{"version":3,"sources":["logo.svg","button1.js","components/TopBar/TopBar.tsx","Page1.js","Page2.js","App.js","reportWebVitals.ts","theme/index.tsx","i18n/index.js","actions/accountActions.js","reducers/accountReducer.js","reducers/index.js","store/index.js","index.tsx"],"names":["button1","Typography","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","TopBar","Box","sx","flexGrow","AppBar","Toolbar","IconButton","size","edge","mr","variant","noWrap","component","xs","sm","placeholder","inputProps","App","CustomCheckbox","Checkbox","status","danger","useTranslation","t","i18n","useHistory","className","src","logo","alt","defaultChecked","ButtonGroup","Button","onClick","changeLanguage","to","as","path","Page1","Page2","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","orange","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SILENT_LOGIN","LOGOUT","UPDATE_PROFILE","initialState","user","accountReducer","state","action","type","produce","draft","payload","rootReducer","combineReducers","account","middlewares","createLogger","thunkMiddleware","enhancers","composeWithDevTools","applyMiddleware","composedEnhancers","compose","createStore","ReactDOM","render","StrictMode","fallback","CircularProgress","store","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.5dbe362b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Typography} from \"@mui/material\";\n\nconst button1 = () => {\n  return(\n      <Typography>EU sunt din js</Typography>\n  );\n};\n\nexport default button1;","import * as React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst Search = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n    },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function TopBar() {\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        sx={{ mr: 2 }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n                    >\n                        Material-UI\n                    </Typography>\n                    <Search>\n                        <SearchIconWrapper>\n                            <SearchIcon />\n                        </SearchIconWrapper>\n                        <StyledInputBase\n                            placeholder=\"Searchâ€¦\"\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </Search>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}\n","import {Typography} from \"@mui/material\";\n\nexport default () => (<Typography>Page 1</Typography>);","import {Typography} from \"@mui/material\";\n\nexport default () => (<Typography>Page 2</Typography>);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Button, ButtonGroup, Checkbox, styled, Typography} from \"@mui/material\";\nimport Button1 from \"./button1\";\nimport {useTranslation} from \"react-i18next\";\nimport TopBar from \"./components/TopBar/TopBar\";\nimport {BrowserRouter, HashRouter, Link, Route, Switch, useHistory} from \"react-router-dom\";\nimport Page1 from \"./Page1\";\nimport Page2 from \"./Page2\";\n\nconst App = () => {\n    const CustomCheckbox = styled(Checkbox)(({theme}) => ({\n        color: theme.status.danger,\n        '&.Mui-checked': {\n            color: theme.status.danger,\n        },\n    }));\n    const {t, i18n} = useTranslation();\n    const history = useHistory();\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <TopBar/>\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <p>\n                        Edit <code>src/App.tsx</code> and save to reload.\n                    </p>\n                    <Typography>Astai bun</Typography>\n                    <Typography>{t(`title`)}</Typography>\n                    <CustomCheckbox defaultChecked/>\n                    <Button1/>\n                    <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n                        <Button onClick={() => i18n.changeLanguage(\"en\")}>EN</Button>\n                        <Button onClick={() => i18n.changeLanguage(\"de\")}>DE</Button>\n                        <Button onClick={() => i18n.changeLanguage(\"ro\")}>RO</Button>\n                    </ButtonGroup>\n                    <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n                        <Link to=\"/page1\" as=\"a\">p1</Link>\n                        <Link to=\"/page2\" as=\"a\">p2</Link>\n                    </ButtonGroup>\n                    <Switch>\n                        <Route path=\"/page1\" component={Page1}>\n                            <Page1/>\n                        </Route>\n                        <Route path=\"/page2\">\n                            <Page2/>\n                        </Route>\n                    </Switch>\n                    <a\n                        className=\"App-link\"\n                        href=\"https://reactjs.org\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Learn React\n                    </a>\n                </header>\n            </div>\n        </HashRouter>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createTheme} from \"@mui/material\";\nimport {orange} from \"@mui/material/colors\";\n\ndeclare module '@mui/material/styles' {\n    interface Theme {\n        status: {\n            danger: string;\n        };\n    }\n\n    interface ThemeOptions {\n        status?: {\n            danger?: string;\n        };\n    }\n}\n\nexport default createTheme({\n    status: {\n        danger: orange[500],\n    },\n});\n\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n    // learn more: https://github.com/i18next/i18next-http-backend\n    // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n    .use(Backend)\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n        fallbackLng: 'en',\n        debug: true,\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        }\n    });\n\nexport default i18n;","// import axios from 'src/utils/axios';\n// import authService from 'src/services/authService';\n\nexport const LOGIN_REQUEST = '@account/login-request';\nexport const LOGIN_SUCCESS = '@account/login-success';\nexport const LOGIN_FAILURE = '@account/login-failure';\nexport const SILENT_LOGIN = '@account/silent-login';\nexport const LOGOUT = '@account/logout';\nexport const REGISTER = '@account/register';\nexport const UPDATE_PROFILE = '@account/update-profile';\n\nexport function login(email, password) {\n  return  (dispatch) => {\n    try {\n      dispatch({ type: LOGIN_REQUEST });\n\n      const user = {};//await authService.loginWithEmailAndPassword(email, password);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          user\n        }\n      });\n    } catch (error) {\n      dispatch({ type: LOGIN_FAILURE });\n      throw error;\n    }\n  };\n}\n\nexport function setUserData(user) {\n  return (dispatch) => dispatch({\n    type: SILENT_LOGIN,\n    payload: {\n      user\n    }\n  });\n}\n\nexport function logout() {\n  return async (dispatch) => {\n    // authService.logout();\n\n    dispatch({\n      type: LOGOUT\n    });\n  };\n}\n\nexport function register() {\n  return true;\n}\n\nexport function updateProfile(update) {\n  // const request = axios.post('/api/account/profile', { update });\n\n  return (dispatch) => {\n    // request.then((response) =>\n        dispatch({\n      type: UPDATE_PROFILE,\n      // payload: response.data\n    });\n  // );\n  };\n}\n","import produce from 'immer';\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT,\n  SILENT_LOGIN,\n  UPDATE_PROFILE\n} from 'src/actions/accountActions';\n\nconst initialState = {\n  user: null\n};\n\nconst accountReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST: {\n      return produce(state, (draft) => {\n        // Ensure we clear current session\n        draft.user = null;\n      });\n    }\n\n    case LOGIN_SUCCESS: {\n      const { user } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.user = user;\n      });\n    }\n\n    case LOGIN_FAILURE: {\n      return produce(state, () => {\n        // Maybe store error\n      });\n    }\n\n    case LOGOUT: {\n      return produce(state, (draft) => {\n        draft.user = null;\n      });\n    }\n\n    case SILENT_LOGIN: {\n      const { user } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.user = user;\n      });\n    }\n\n    case UPDATE_PROFILE: {\n      const { user } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.user = user;\n      });\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default accountReducer;\n","import {combineReducers} from 'redux';\nimport accountReducer from './accountReducer';\n\nconst rootReducer = combineReducers({\n    account: accountReducer\n});\n\nexport default rootReducer;\n","import {applyMiddleware, compose, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {createLogger} from 'redux-logger';\nimport rootReducer from '../reducers';\nimport {ENABLE_REDUX_LOGGER} from '../config';\n\nconst loggerMiddleware = createLogger();\n\nconst middlewares = [thunkMiddleware];\n\nif (ENABLE_REDUX_LOGGER) {\n    middlewares.push(loggerMiddleware);\n}\n\nconst middlewareEnhancer = composeWithDevTools(\n    applyMiddleware(...middlewares)\n);\n\nconst enhancers = [middlewareEnhancer];\nconst composedEnhancers = compose(...enhancers);\n\nexport default createStore(rootReducer, {}, composedEnhancers);\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport {CircularProgress, ThemeProvider} from \"@mui/material\";\nimport {Provider} from 'react-redux';\nimport theme from './theme';\nimport './i18n';\nimport store from './store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Suspense fallback={<CircularProgress/>}>\n            <Provider store={store}>\n                <ThemeProvider theme={theme}>\n                    <App/>\n                </ThemeProvider>\n            </Provider>\n        </Suspense>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}