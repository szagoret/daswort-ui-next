{"version":3,"sources":["i18n/index.js","components/FilterBar/FilterBar.tsx","components/TopBar/TopBar.tsx","components/NavBar/NavBar.tsx","components/Layout/DefaultLayout.tsx","App.js","reportWebVitals.ts","theme/index.tsx","actions/accountActions.js","reducers/accountReducer.js","reducers/index.js","store/index.js","index.tsx"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","supportedLngs","backend","loadPath","process","interpolation","escapeValue","data","title","FilterBar","Box","component","Paper","variant","sx","display","flexGrow","Grid","container","spacing","p","direction","justifyContent","alignItems","item","xs","sm","md","Autocomplete","multiple","id","options","size","getOptionLabel","option","filterSelectedOptions","renderInput","params","TextField","label","placeholder","Search","styled","theme","position","borderRadius","shape","backgroundColor","grey","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","duration","complex","TopBar","name","onToggle","AppBar","zIndex","drawer","Toolbar","bgcolor","borderStyle","borderColor","borderWidth","borderBottomWidth","IconButton","edge","mr","onClick","Typography","noWrap","inputProps","drawerWidth","mixins","toolbar","Divider","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","NavBar","open","handleDrawerToggle","items","flexShrink","Drawer","onClose","ModalProps","keepMounted","boxSizing","DefaultLayout","props","children","useState","drawerOpen","setDrawerOpen","toggleDrawer","prev","drawerItems","icon","mt","App","className","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","status","danger","orange","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SILENT_LOGIN","LOGOUT","UPDATE_PROFILE","initialState","user","accountReducer","state","action","type","produce","draft","payload","rootReducer","combineReducers","account","middlewares","createLogger","thunkMiddleware","enhancers","composeWithDevTools","applyMiddleware","composedEnhancers","compose","createStore","ReactDOM","render","StrictMode","fallback","CircularProgress","store","ThemeProvider","basename","document","getElementById"],"mappings":"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","file":"static/js/main.de513b2d.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n    .use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: 'en',\n        debug: true,\n        supportedLngs: ['en', 'de', 'ro'],\n        backend: {\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`,\n        },\n        interpolation: {\n            escapeValue: false\n        }\n    });\n\nexport default i18n;","import Box from \"@mui/material/Box\";\nimport {Grid, Paper, TextField} from \"@mui/material\";\nimport Autocomplete from '@mui/material/Autocomplete';\n\nconst data = [\n    {title: \"Item 1\"},\n    {title: \"Item 2\"},\n    {title: \"Item 3\"},\n    {title: \"Item 4\"}\n];\nconst FilterBar = () => {\n\n    return (\n        <Box component={Paper} variant=\"outlined\" sx={{display: 'flex', flexGrow: 1}}>\n            <Grid container spacing={2}\n                  sx={{p: 1}}\n                  direction=\"row\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\">\n                <Grid item xs={12} sm={6} md={3}>\n                    <Autocomplete\n                        multiple\n                        id=\"tags-outlined\"\n                        options={data}\n                        size=\"small\"\n                        getOptionLabel={(option) => option.title}\n                        filterSelectedOptions\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                label=\"Label 0\"\n                                placeholder=\"Favorites\"\n                            />\n                        )}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                    <Autocomplete\n                        multiple\n                        id=\"tags-outlined\"\n                        options={data}\n                        size=\"small\"\n                        getOptionLabel={(option) => option.title}\n                        filterSelectedOptions\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                label=\"Label 1\"\n                                placeholder=\"Favorites\"\n                            />\n                        )}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                    <Autocomplete\n                        multiple\n                        id=\"tags-outlined\"\n                        options={data}\n                        size=\"small\"\n                        getOptionLabel={(option) => option.title}\n                        filterSelectedOptions\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                label=\"Label 2\"\n                                placeholder=\"Favorites\"\n                            />\n                        )}\n                    />\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default FilterBar;","import * as React from 'react';\nimport {styled} from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport {grey} from '@mui/material/colors';\n\nconst Search = styled('div')(({theme}) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: grey[\"100\"],//alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: grey[\"200\"],//alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n    },\n}));\n\nconst SearchIconWrapper = styled('div')(({theme}) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({theme}) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width', {\n            duration: theme.transitions.duration.complex\n        }),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '30ch',\n            '&:focus': {\n                width: '40ch',\n            },\n        },\n    },\n}));\n\nexport declare interface TopBarProps {\n    name: String,\n    onToggle: () => void\n}\n\nconst TopBar: React.FC<TopBarProps> = ({name, onToggle}) => (\n    <Box sx={{flexGrow: 1, display: 'flex'}}>\n        <AppBar position=\"fixed\" sx={{\n            zIndex: (theme) => theme.zIndex.drawer + 1,\n            // boxShadow: 'none'\n        }}>\n            <Toolbar\n                sx={{\n                    bgcolor: 'common.white',\n                    color: 'text.secondary',\n                    borderStyle: 'solid',\n                    borderColor: '#EAEEF3',\n                    borderWidth: 0,\n                    borderBottomWidth: 'thin'\n                }}>\n                <IconButton\n                    size=\"large\"\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    sx={{mr: 2, display: {sm:'none'}}}\n                    onClick={onToggle}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography\n                    variant=\"h6\"\n                    noWrap\n                    component=\"div\"\n                    sx={{flexGrow: 1, display: {xs: 'none', md: 'flex'}}}\n                >\n                    {name}\n                </Typography>\n                <Search>\n                    <SearchIconWrapper>\n                        <SearchIcon sx={{\n                            color: '#007FFF'\n                        }}/>\n                    </SearchIconWrapper>\n                    <StyledInputBase\n                        placeholder=\"Search…\"\n                        inputProps={{'aria-label': 'search'}}\n                    />\n                </Search>\n            </Toolbar>\n        </AppBar>\n    </Box>\n);\nexport default TopBar\n","import {Box, Theme} from \"@mui/material\";\nimport {styled} from \"@mui/material/styles\";\nimport Drawer from '@mui/material/Drawer';\nimport {CSSObject} from \"@emotion/react\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport React from \"react\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Divider from \"@mui/material/Divider\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport MailIcon from \"@mui/icons-material/Mail\";\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n        width: `calc(${theme.spacing(8)} + 5px)`,\n    },\n});\nconst DrawerHeader = styled('div')(({theme}) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n}));\n\n// const Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\n//     ({theme, open}) => ({\n//         width: drawerWidth,\n//         flexShrink: 0,\n//         whiteSpace: 'nowrap',\n//         boxSizing: 'border-box',\n//         display: 'block',\n//         [`& .MuiDrawer-docked`]: {width: drawerWidth, boxSizing: 'border-box'},\n//         ...(open && {\n//             ...openedMixin(theme),\n//             '& .MuiDrawer-docked': openedMixin(theme),\n//         }),\n//         ...(!open && {\n//             ...closedMixin(theme),\n//             '& .MuiDrawer-docked': closedMixin(theme),\n//         }),\n//     }),\n// );\n\nconst drawer = (\n    <div>\n        <Toolbar/>\n        <Divider/>\n        <List>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                <ListItem button key={text}>\n                    <ListItemIcon>\n                        {index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}\n                    </ListItemIcon>\n                    <ListItemText primary={text}/>\n                </ListItem>\n            ))}\n        </List>\n        <Divider/>\n        <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                <ListItem button key={text}>\n                    <ListItemIcon>\n                        {index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}\n                    </ListItemIcon>\n                    <ListItemText primary={text}/>\n                </ListItem>\n            ))}\n        </List>\n    </div>\n);\n\ndeclare interface NavBarDrawerItem {\n    label: string,\n    icon: React.ReactNode\n}\n\ndeclare interface NavBarProps {\n    open: boolean,\n    items: NavBarDrawerItem[],\n    handleDrawerToggle: (args: any) => void\n}\n\nconst NavBar: React.FC<NavBarProps> = ({open, items, handleDrawerToggle}) => {\n    return (\n        <Box\n            component=\"nav\"\n            sx={{width: {sm: drawerWidth}, flexShrink: {sm: 0}}}\n            aria-label=\"mailbox folders\"\n        >\n            <Drawer\n                variant=\"temporary\"\n                open={open}\n                onClose={handleDrawerToggle}\n                ModalProps={{\n                    keepMounted: true, // Better open performance on mobile.\n                }}\n                sx={{\n                    display: {xs: 'block', sm: 'none'},\n                    '& .MuiDrawer-paper': {boxSizing: 'border-box', width: drawerWidth},\n                }}\n            >\n                {drawer}\n            </Drawer>\n            <Drawer\n                variant=\"permanent\"\n                sx={{\n                    display: {xs: 'none', sm: 'block'},\n                    '& .MuiDrawer-paper': {boxSizing: 'border-box', width: drawerWidth},\n                }}\n                open\n            >\n                {drawer}\n            </Drawer>\n        </Box>\n    );\n};\n\nexport default NavBar;","import React, {useState} from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TopBar from \"../TopBar/TopBar\";\nimport NavBar from \"../NavBar/NavBar\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\n\ndeclare interface DefaultLayoutProps {\n    children: React.ReactNode\n}\n\nconst DefaultLayout: React.FC<DefaultLayoutProps> = (props) => {\n    const {children} = props;\n    const [drawerOpen, setDrawerOpen] = useState(true);\n    const toggleDrawer = () => setDrawerOpen((prev: boolean) => !prev);\n    const drawerItems = [\n        {\n            label: 'Item 1',\n            icon: <InboxIcon/>\n\n        },\n        {\n            label: 'Item 2',\n            icon: <InboxIcon/>\n        },\n        {\n            label: 'Item 3',\n            icon: <InboxIcon/>\n\n        }\n    ];\n    return (\n        <Box sx={{display: 'flex'}}>\n            <TopBar name=\"DarWort\" onToggle={toggleDrawer}/>\n            <NavBar open={drawerOpen} items={drawerItems} handleDrawerToggle={toggleDrawer}/>\n            <Box component=\"main\" sx={{flexGrow: 1, p: 3, mt: 8, width: '100%'}}>\n                {children}\n            </Box>\n        </Box>\n    );\n};\n\nexport default DefaultLayout;","import React from 'react';\nimport './App.css';\nimport {CssBaseline, Typography} from \"@mui/material\";\nimport FilterBar from \"./components/FilterBar/FilterBar\";\nimport DefaultLayout from \"./components/Layout/DefaultLayout\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <CssBaseline/>\n            <DefaultLayout>\n                <FilterBar/>\n                {/*<Typography paragraph>*/}\n                {/*    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod*/}\n                {/*    tempor incididunt ut labore et dolore magna aliqua. Rhoncus dolor purus non*/}\n                {/*    enim praesent elementum facilisis leo vel. Risus at ultrices mi tempus*/}\n                {/*    imperdiet. Semper risus in hendrerit gravida rutrum quisque non tellus.*/}\n                {/*    Convallis convallis tellus id interdum velit laoreet id donec ultrices.*/}\n                {/*    Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit*/}\n                {/*    adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra*/}\n                {/*    nibh cras. Metus vulputate eu scelerisque felis imperdiet proin fermentum*/}\n                {/*    leo. Mauris commodo quis imperdiet massa tincidunt. Cras tincidunt lobortis*/}\n                {/*    feugiat vivamus at augue. At augue eget arcu dictum varius duis at*/}\n                {/*    consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem donec massa*/}\n                {/*    sapien faucibus et molestie ac.*/}\n                {/*</Typography>*/}\n            </DefaultLayout>\n        </div>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createTheme} from \"@mui/material\";\nimport {orange} from \"@mui/material/colors\";\n\ndeclare module '@mui/material/styles' {\n    interface Theme {\n        shape: {\n            borderRadius: number\n        },\n        status: {\n            danger: string;\n        };\n    }\n\n    interface ThemeOptions {\n        shape: {\n            borderRadius: number\n        },\n        status?: {\n            danger?: string;\n        };\n    }\n}\n\nexport default createTheme({\n    shape: {\n        borderRadius: 8,\n    },\n    status: {\n        danger: orange[500],\n    }\n});\n\n","// import axios from 'src/utils/axios';\n// import authService from 'src/services/authService';\n\nexport const LOGIN_REQUEST = '@account/login-request';\nexport const LOGIN_SUCCESS = '@account/login-success';\nexport const LOGIN_FAILURE = '@account/login-failure';\nexport const SILENT_LOGIN = '@account/silent-login';\nexport const LOGOUT = '@account/logout';\nexport const REGISTER = '@account/register';\nexport const UPDATE_PROFILE = '@account/update-profile';\n\nexport function login(email, password) {\n  return  (dispatch) => {\n    try {\n      dispatch({ type: LOGIN_REQUEST });\n\n      const user = {};//await authService.loginWithEmailAndPassword(email, password);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          user\n        }\n      });\n    } catch (error) {\n      dispatch({ type: LOGIN_FAILURE });\n      throw error;\n    }\n  };\n}\n\nexport function setUserData(user) {\n  return (dispatch) => dispatch({\n    type: SILENT_LOGIN,\n    payload: {\n      user\n    }\n  });\n}\n\nexport function logout() {\n  return async (dispatch) => {\n    // authService.logout();\n\n    dispatch({\n      type: LOGOUT\n    });\n  };\n}\n\nexport function register() {\n  return true;\n}\n\nexport function updateProfile(update) {\n  // const request = axios.post('/api/account/profile', { update });\n\n  return (dispatch) => {\n    // request.then((response) =>\n        dispatch({\n      type: UPDATE_PROFILE,\n      // payload: response.data\n    });\n  // );\n  };\n}\n","import produce from 'immer';\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT,\n  SILENT_LOGIN,\n  UPDATE_PROFILE\n} from 'src/actions/accountActions';\n\nconst initialState = {\n  user: null\n};\n\nconst accountReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST: {\n      return produce(state, (draft) => {\n        // Ensure we clear current session\n        draft.user = null;\n      });\n    }\n\n    case LOGIN_SUCCESS: {\n      const { user } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.user = user;\n      });\n    }\n\n    case LOGIN_FAILURE: {\n      return produce(state, () => {\n        // Maybe store error\n      });\n    }\n\n    case LOGOUT: {\n      return produce(state, (draft) => {\n        draft.user = null;\n      });\n    }\n\n    case SILENT_LOGIN: {\n      const { user } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.user = user;\n      });\n    }\n\n    case UPDATE_PROFILE: {\n      const { user } = action.payload;\n\n      return produce(state, (draft) => {\n        draft.user = user;\n      });\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default accountReducer;\n","import {combineReducers} from 'redux';\nimport accountReducer from './accountReducer';\n\nconst rootReducer = combineReducers({\n    account: accountReducer\n});\n\nexport default rootReducer;\n","import {applyMiddleware, compose, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {createLogger} from 'redux-logger';\nimport rootReducer from '../reducers';\nimport {ENABLE_REDUX_LOGGER} from '../config';\n\nconst loggerMiddleware = createLogger();\n\nconst middlewares = [thunkMiddleware];\n\nif (ENABLE_REDUX_LOGGER) {\n    middlewares.push(loggerMiddleware);\n}\n\nconst middlewareEnhancer = composeWithDevTools(\n    applyMiddleware(...middlewares)\n);\n\nconst enhancers = [middlewareEnhancer];\nconst composedEnhancers = compose(...enhancers);\n\nexport default createStore(rootReducer, {}, composedEnhancers);\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport {CircularProgress, ThemeProvider} from \"@mui/material\";\nimport {Provider} from 'react-redux';\nimport theme from './theme';\nimport store from './store';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Suspense fallback={<CircularProgress/>}>\n            <Provider store={store}>\n                <ThemeProvider theme={theme}>\n                    <HashRouter basename=\"/daswort-ui-next\">\n                        <App/>\n                    </HashRouter>\n                </ThemeProvider>\n            </Provider>\n        </Suspense>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}